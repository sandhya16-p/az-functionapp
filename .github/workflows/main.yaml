name: Deploy Python project to Azure Function App
on:
  [push]

permissions:
  id-token: write
  contents: read

env:
  AZURE_FUNCTIONAPP_NAME: 'backendapi-1'   
  AZURE_FUNCTIONAPP_PACKAGE_PATH: './AzureFunctionDeploy.zip'
  AZURE_RESOURCE_GROUP: 'DefaultResourceGroup-EUS2'
  AZURE_STORAGE_ACCOUNT_NAME: 'backendapi1'
  AZURE_CONTAINER_NAME: 'backendcontainer'                          

jobs:
  deploy-functions:
    runs-on: ubuntu-latest
    steps:
    
    # Checkout code
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: "3.11"
  
    # Install dependencies
    - name: 'Install Python Dependencies Using Pip'
      run: |
        mkdir -p AzureFunctionDeploy
        cd ./AzureFunctionDeploy
        python -m pip install --upgrade pip
        pip install azure-storage-blob
        pip install --target=".python_packages/lib/site-packages" -r requirements.txt
         
    # Package the function app into a ZIP file
    - name: 'Zip the Azure Function Deploy folder'
      run: |
        cd AzureFunctionDeploy
        zip -r ../AzureFunctionDeploy.zip ./* 
    
    # Upload ZIP to Azure Blob Storage
    - name: Upload deployment ZIP to Azure Blob Storage
      run: |
        python -m pip install azure-storage-blob
        python - <<EOF
        from azure.storage.blob import BlobServiceClient, BlobClient, ContainerClient
        import os
        
        # Environment variables
        account_name = "${{ env.AZURE_STORAGE_ACCOUNT_NAME }}"
        sas_url = "${{ secrets.AZURE_SAS_URL }}"
        container_name = "${{ env.AZURE_CONTAINER_NAME }}"
        zip_file_path = "./AzureFunctionDeploy.zip"
        blob_name = "AzureFunctionDeploy.zip"

        # Ensure SAS URL is properly formatted in the string
        print(f"SAS URL: {sas_url}")

        # BlobServiceClient using the SAS URL
        blob_service_client = BlobServiceClient(account_url=sas_url) 

        container_client = blob_service_client.get_container_client(container_name)
        blob_client = container_client.get_blob_client(blob_name)
        with open(zip_file_path, "rb") as data:
            blob_client.upload_blob(data, overwrite=True)

        print(f"File uploaded to {container_name} as {blob_name}")
        EOF

    # Login to Azure
    - name: Azure Login
      uses: azure/login@v2
      with:
        client-id: ${{ secrets.CLIENT_ID }}
        tenant-id: ${{ secrets.TENANT_ID }}
        subscription-id: ${{ secrets.SUBSCRIPTION_ID }}
    
    # Verify Azure account and resource group
    - name: 'Run az commands'
      run: |
        az account show
        az group list

    - name: Build & Deploy to Azure Function App
      run: |
        az functionapp deployment source config-zip \
          --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
          --name ${{ env.AZURE_FUNCTIONAPP_NAME }} \
          --src "https://backendapi1.blob.core.windows.net/backendcontainer/AzureFunctionDeploy.zip?${{ secrets.AZURE_SAS_TOKEN }}" \
          --debug

    # - name: 'Run Azure Functions Action'
    #   uses: Azure/functions-action@v1.1.6
    #   with:
    #     app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
    #     publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }}
    #     package: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
    #     scm-do-build-during-deployment: true
    #     enable-oryx-build: false
    #     remote-build: true
